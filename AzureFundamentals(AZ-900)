Microsoft Azure 
1. Compute
2. Networking
3. Storage services
4. Cloud security best practices
5. Governance and management options

Module 1
1. Cloud computing
   Cloud computing is the delivery of computing services over the internet.
   Computing services are:
   a. Virtual machines
   b. Storage
   c. Databases
   d. Networking
   e. Internet of Things (IoT), machine learning (ML), and artificial intelligence (AI)
   Cloud computing = Compute power + Storage
   Only pay for the resources used.
   Don’t have to wait to build a new physical datacenter.

2. Shared responsibility model
   Responsibilities are shared between the cloud provider and the consumer
   a. Cloud provider responsibilities
      i) Physical security
     ii) Power
    iii) Cooling
     iv) Network connectivity
  b. Consumer responsibilities
     i) Data and information stored in the cloud
    ii) Access security, meaning you only give access to those who need it

    Infrastructure as a service (IaaS) - Consumer responsibility
    Platform as a service (PaaS) - Evenly distributes responsibility between the cloud provider and the consumer
    Software as a service (SaaS) - Cloud provider responsibility

3. Cloud modules
   The deployment type of cloud resources
   The three main cloud models are: 
   i) Private
  ii) Public
 iii) Hybrid

    Private cloud: 
     A private cloud is the natural evolution from a corporate datacenter.
     It’s a cloud (delivering IT services over the internet) that’s used by a single entity. 
     Private cloud provides much greater control for the company and its IT department. 
     However, it also comes with greater cost and fewer of the benefits of a public cloud deployment. 
     Finally, a private cloud may be hosted from your 
     a. on site datacenter - Your company owns and manages the servers and infrastructure(On your premises).
     b. Can be hosted in a dedicated datacenter offsite - The infrastructure is located outside your company premises, but still used only by your company.
     c. A third party that has dedicated that datacenter to your company(Azure).
   
    Public cloud
     A public cloud is built, controlled, and maintained by a third-party cloud provider. 
     With a public cloud, anyone that wants to purchase cloud services can access and use resources.

   Hybrid cloud
     Uses both public and private clouds in an inter-connected environment
     Hybrid cloud can be used to provide an extra layer of security. 
     Users can flexibly choose which services to keep in public cloud and which to deploy to their private cloud infrastructure.

  Multi-cloud
     Use multiple public cloud providers. 
     Maybe you use different features from different cloud providers. 
     Or maybe you started your cloud journey with one provider and are in the process of migrating to a different provider. 
     Regardless, in a multi-cloud environment you deal with two (or more) public cloud providers and manage resources and security in both environments.

Azure Arc
   Azure Arc is a set of technologies that helps manage your cloud environment. 
   Azure Arc can help manage your cloud environment whether
   a. It's a public cloud solely on Azure
   b. A private cloud in your datacenter
   c. A hybrid configuration
   d. Even a multi-cloud environment running on multiple cloud providers at once.

Azure VMware Solution
What if you’re already established with VMware in a private cloud environment but want to migrate to a public or hybrid cloud? 
Azure VMware Solution lets you run your VMware workloads in Azure with seamless integration and scalability.

What is VMWare? Provides the software that runs on a physical server to host multiple VM's. 
                It allows you to create and run multiple virtual machines (VMs) on that server.
                Physical Server Has real hardware: CPU, RAM, and physical storage (like SSDs or HDDs).
                
                A physical server usually has multi-core CPUs (e.g., 16 cores or more).
                VMware lets you divide those cores into virtual CPUs (vCPUs).
                Each VM gets a certain number of vCPUs, which are scheduled to run on the physical cores.
                So, a server with 16 cores could run:
                              8 VMs with 2 vCPUs each
                              Or 16 VMs with 1 vCPU each
                              Or even more, depending on workload and scheduling
               
               Storage and Databases
               Each VM gets virtual storage (a virtual hard disk), which is stored on the server’s physical disk or shared storage.
               You can install databases inside VMs just like you would on a physical computer.
               Think of the physical server as a building, VMware as the architect, VMs as apartments, and the database as a tenant storing things in their apartment. The space they use is part of the building’s total capacity.

Consumption-based model
IT infrastructure models has two types of expenses to consider
a. Capital expenditure (CapEx) 
b. Operational expenditure (OpEx)

CapEx - One-time, up-front expenditure to purchase or secure tangible resources. 
        A new building, repaving the parking lot, building a datacenter, or buying a company vehicle.
OpEx  - Spending money on services or products over time(Eg: monthly). 
        Renting a convention center, leasing a company vehicle, or signing up for cloud services are all examples of OpEx.

Cloud computing falls under OpEx because cloud computing operates on a consumption-based model. 
You pay for the IT resources you use. 
If you don’t use any IT resources this month, you don’t pay for any IT resources.

This consumption-based model has many benefits, including:

1. No upfront costs.
2. No need to purchase and manage costly infrastructure that users might not use to its fullest potential.
3. The ability to pay for more resources when they're needed.
4. The ability to stop paying for resources that are no longer needed.

Cloud computing is the delivery of computing services over the internet by using a pay-as-you-go pricing model. You typically pay only for the cloud services you use, which helps you:

1. Plan and manage your operating costs.
2. Run your infrastructure more efficiently.
3. Scale as your business needs change.

Module 2
Benefits of using cloud services

1. Benefits of High availability(uptime) and scalability(handle demand) in the cloud
a. High availability
   SLA - Service Level Agreement - The agreement between the service provider(Azure) and customer
   Azure SLA - Represented as % related to the application availablility. 
            Up time - How mcuh % of time will the service be available.
            Down time - How mcuh % of time is the service not available. Credit(money) will be given to consumer if the down time is breached.
   High SLA = High cost
   SLA in azure depends on the services - Like 99%, 99.95%, 99.99%
b. Scalability
   Ability to adjust resources to meet demand.
   If you suddenly experience peak traffic and your systems are overwhelmed, the ability to scale means you can add more resources to better handle the increased demand.
   Cloud is a consumption-based model, you only pay for what you use so you aren't overpaying for services.
   If demand drops off, you can reduce your resources and thereby reduce your costs.

   Feature	              Vertical Scaling	                Horizontal Scaling
   Scaling Method	        Add more power to one machine	    Add more machines
   Example	              Upgrade CPU/RAM	                   Add more servers
   Complexity	           Low	                               High
   Scalability Limit	     Yes	                               No (more flexible)
   Fault Tolerance	     Low	                               High

2. Benefits of reliability and predictability in the cloud
   Reliability
   Reliability is the ability of a system to recover from failures and continue to function. 
   It's also one of the pillars of the Microsoft Azure Well-Architected Framework.

   Cloud with a decentralized design, enables 
   a. To have resources deployed in regions around the world
   b. With this global scale, even if one region has a catastrophic event other regions are still up and running. 
   c.  i) You can design your applications to automatically take advantage of this increased reliability. 
      ii) In some cases, your cloud environment itself will automatically shift to a different region for you, 
          with no action needed on your part.

   Predictability
   Predictability can be focused on 
   1. Performance predictability 
   2. Cost predictability.

   1. Performance
      a. Focuses on predicting the resources needed
      b. Cloud concepts that support performance predictability
          i) Autoscaling
         ii) Load balancing
        iii) High availability
   
   2. Cost
      Predicting the cost of the cloud spend.
      Below Tools help to get an estimate of potential cloud spend 
      a. Total Cost of Ownership (TCO) 
      b. Pricing Calculator 

      1. Track your resource use in real time, monitor resources to ensure that you’re using them in the most efficient way
      2. Apply data analytics to find patterns and trends that help better plan resource deployments. 
      3. By operating in the cloud and using cloud analytics and information, you can predict future costs and adjust your resources as needed

  3. Benefits of security and governance in the cloud
     Ensure that all your deployed resources meet corporate standards and government regulatory requirements.
     You can update all your deployed resources to new standards as standards change.
     Cloud-based auditing helps flag any resource that’s out of compliance with your corporate standards and provides mitigation strategies. 
     Depending on your operating model, software patches and updates may also automatically be applied, which helps with both governance and security.

     Security
     a. Find a cloud solution that matches your security needs
        Model	You Manage	                 Provider Manages	           Security Control
        IaaS	OS, patches, software	     Hardware, virtualization	     Maximum
        PaaS	App code	                    OS, runtime, patches	        Moderate
        SaaS	Data, user access	           Everything else(Eg:Gmail)	  Minimal
     b. The cloud is intended as an over-the-internet delivery of IT resources, 
        cloud providers are typically well suited to handle things like distributed denial of service (DDoS) attacks, 
        making your network more robust and secure.

 4. Benefits of manageability in the cloud
    There are two types
    1. Management of the cloud - Managing your cloud resources(Scale resource, 
                                                               Monitor the helath and automatically replace failing resources, 
                                                               Receive automatic alerts)
    2. Management in the cloud - How? - Web portal, Using command line interface, APIs, PowerShell

Module 3

Infrastructure as a Service
1. FLexible-Provides you the maximum amount of control for your cloud resources.
   
   Cloud provider responsibility - Hardware, Network connectivity (to the internet), and physical security
   Consumer responsibility - Everything else(operating system installation, configuration, and maintenance; network configuration; database and storage configuration)
   Example: Lift-and-shift migration - On-premise to cloud
            Testing and development -  You can start up or shut down the different environments rapidly
   
Platform as a Service
1. Middle ground between renting space in a datacenter (infrastructure as a service) and paying for a complete and deployed solution (software as a service).
   Consumer don't have to worry about the licensing or patching for operating systems and databases.

   Cloud provider responsibility - Physical infrastructure, physical security, and connection to the internet.
                                   Maintain the operating systems, middleware, development tools, and business intelligence services
   Consumer responsibility - Application building, Information and data, Devices, Accounts and identities

   Depending on the configuration, you or the cloud provider may be responsible for 
   1. Networking settings and connectivity within your cloud environment
   2. Network and application security
   3. The directory infrastructure.

   Example: Developers create applications using built-in software components.
            Analytics or business intelligence - Predicting outcomes to improve forecasting, product design decisions, investment returns, and other business decisions

Software as a Service
1. Renting or using a fully developed application(Email, financial software, messaging applications, and connectivity software)
   Example: Email and messaging, Business productivity applications, Finance and expense tracking.


---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
             Core architectural components of Azure 

Azure accounts
  Azure account -> Subscription(one or more) -> Resource groups -> Resources
  Single Azure account for your business and separate subscriptions for development, marketing, and sales departments

  Azure free account: https://azure.microsoft.com/free
  Azure free student account: https://azure.microsoft.com/free/students/

  Microsoft Learn sandbox: Creates a temporary subscription that's added to your Azure account. 
  This temporary subscription allows you to create Azure resources during a Learn module. 
  Learn automatically cleans up the temporary resources for you after you've completed the module.

 Lear sandbox can be used using the below methods or use Azure portal(https://portal.azure.com/learn.docs.microsoft.com)
 1. PowerShell CLI
 2. BASH CLI
 3. Azure CLI interactive mode

Physical infrastructure
* Azure starts with datacenters.
* Azure has datacenters around the world.

Datacenters are grouped into 
1. Azure Regions 
2. Azure Availability Zones

Regions: Chennai
* Region is a geographical area on the planet
* Contains at least one, but potentially multiple datacenters(networked together with a low-latency network)

Availability Zones: Annanagar, T.Nagar, Velacherry
* Physically separate datacenters within an Azure region.
* If one zone goes down, the other continues working. 
* Availability zones are connected through high-speed, private fiber-optic networks.
* Availability zones are primarily for VMs, managed disks, load balancers, and SQL databases.

 Azure services that support availability zones fall into three categories:
 1. Zonal services: You pin the resource to a specific zone (for example, VMs, managed disks, IP addresses).
 2. Zone-redundant services: The platform replicates automatically across zones
 3. Non-regional services: Services are always available from Azure

Region pairs(300 miles away)
* Most Azure regions are paired with another region within the same geography
* For example, if a region in a pair was affected by a natural disaster, services would automatically fail over to the other region in its region pair.
* EX: West US paired with East US and South-East Asia paired with East Asia

Sovereign Regions
* Sovereign regions are instances of Azure that are isolated from the main instance of Azure.
* Sovereign region are used for compliance or legal purposes.

Azure management infrastructure
1. Resources 
2. Resource groups
3. Subscriptions
4. Accounts

1. Resources:
   * Resource is the basic building block of Azure
   * Anything you create, provision, deploy, etc. is a resource
   * Virtual Machines (VMs), virtual networks, databases, cognitive services, etc. are all considered resources within Azure.

2. Resource groups:
   * Groupings of resources.
   * A single resource can only be in one resource group at a time.
   * Resource groups can't be nested, meaning you can’t put resource group B inside of resource group A.
   * When you apply an action to a resource group, that action will apply to all the resources within the resource group.
   * If you delete a resource group, all the resources will be deleted.
   * If you grant or deny access to a resource group, you’ve granted or denied access to all the resources within the resource group.

3. Azure subscriptions:
   * Subscriptions are a unit of 
      a. Management
      b. Billing
      c. Scale
    * A subscription provides you with authenticated and authorized access to Azure products and services. 
    * It also allows you to provision resources. (When you provision a virtual machine, you're allocating CPU, memory, disk space, and installing an operating system)
    * An account can have multiple subscriptions


      You only need one subscription to use Azure.
      But you can have multiple subscriptions to organize things better.
      Why Multiple Subscriptions?

      1. To separate billing for different teams or projects.
      2. To control access differently for different departments or environments.

      Two Types of Boundaries in Azure Subscriptions
      1. Billing Boundary
      * Determines how you're charged.
      * Each subscription gets its own invoice.
      * Example: One subscription for Dev, another for Prod, each with its own budget.
      2. Access Control Boundary
      * Determines who can do what.
      * You can apply different policies to different subscriptions.
      * Example: HR department has access to one subscription, Finance to another.

      Example, you can create:
      One subscription for Dev (with limited access and lower cost).
      One for Prod (with stricter access and higher performance).
      One for Finance (read-only access to billing data).

   Azure management groups
     * Resources are gathered into resource groups, and resource groups are gathered into subscriptions.
     * Azure management groups provide a level of scope above subscriptions.(root)
     * All subscriptions within a management group automatically inherit the conditions applied to the management group
     * Management group -> Subscriptions -> Resource groups -> Resources

     * Azure role-based access control (Azure RBAC) 

      Important facts about management groups:
      * 10,000 management groups can be supported in a single directory.
      * A management group tree can support up to six levels of depth. This limit doesn't include the root level or the subscription level.
      * Each management group and subscription can support only one parent.

      Management Group: Production
      │
      ├── Policy: Allow VMs only in US West
      │
      ├── Subscription A
      │   └── VM (Policy enforced)
      │
      ├── Subscription B
      │   └── VM (Policy enforced)
      │
      └── Azure RBAC: Contributor role assigned to user@company.com
          └── Inherited by all subscriptions and resources


Module 2
Azure compute and networking services

   a. Compute options
      1. Virtual machines
      2. Containers
      3. Azure functions

   b. Networking features
      1. Azure virtual networks
      2. Azure DNS
      3. Azure ExpressRoute

Compute options
1. Azure virtual machines
   * You can create and use VMs in the cloud. 
   * VMs provide infrastructure as a service (IaaS)

VMs are an ideal choice when you need:
   * Total control over the operating system (OS) -       Test your application on Ubuntu 22.04, Windows Server 2019, and CentOS 7.
   * The ability to run custom software -                 Java application that depends on an old version of Java (e.g., JDK 6) and a specific version of Tomcat.
   * To use custom hosting configurations -               A web server (Apache), An app server (Spring Boot), A database (PostgreSQL) - Configure each component on separate VMs, set up custom networking between them, and even simulate firewalls or load balancers
As an IaaS offering, you still need to configure, update, and maintain the software that runs on the VM.

Image :  
      An image is a template used to create a VM and may already include an OS and other software, 
      like development tools or web hosting environments.

Scale VMs in Azure
1. Run single VMs for testing, development, or minor tasks.
2. Group VMs together to provide high availability, scalability, and redundancy.
   Types: 
      a. Scale sets
      b. Availability sets

Virtual machine scale sets
1. Create and manage a group of identical, load-balanced VMs
2. Scale sets allow you to centrally manage, configure, and update a large number of VMs in minutes. 
3. The number of VM instances can automatically increase or decrease in response to demand, or you can set it to scale based on a defined schedule. 
4. VM Scale sets also automatically deploy a load balancer to make sure that your resources are being used efficiently. 
5. VM scale sets, you can build large-scale services for areas such as compute, big data, and container workloads.

Availability sets
1. Tool to help you build a more resilient, highly available environment
2. Ensure that VMs 
   a. Stagger updates 
   b. Has power and network connectivity,

Update domain: 
* The update domain groups VMs that can be rebooted at the same time. 
* This setup allows you to apply updates while knowing that only one update domain grouping is offline at a time. 
* All of the machines in one update domain update. An update group going through the update process is given a 30-minute time to recover before maintenance on the next update domain starts.

Fault domain: 
* The fault domain groups your VMs by common power source and network switch. 
* By default, an availability set splits your VMs across up to three fault domains. 
* This helps protect against a physical power or networking failure by having VMs in different fault domains (thus being connected to different power and networking resources).

Examples of when to use VMs
1. During testing and development
2. When running applications in the cloud  
3. When extending your datacenter to the cloud(On-premis+Cloud)
4. During disaster recovery

2. Azure Virtual Desktop
Another type of virtual machine is the Azure Virtual Desktop.
   * Azure Virtual Desktop is a virtualization service that runs on the cloud
   * Use a cloud-hosted version of Windows from any location
   * Azure Virtual Desktop works across devices and operating systems, and works with apps that you can use to access remote desktops/most modern browsers.
Enhance security
   1. Enable multifactor authentication to secure user sign-ins
   2. Assigning granular role-based access controls (RBACs) to users

3.Azure containers
  Containers are a lightweight, portable way to run applications.
  Running multiple virtual machines on a single physical host
   
  Feature	        Virtual Machines	               Containers
  OS	              Each VM runs its own full OS	   Containers share the host OS
  Size	           Heavy (GBs)	                     Lightweight (MBs)
  Boot Time	        Minutes	                        Seconds
  Use Case	        Full system emulation	            Fast, scalable app deployment

  Example Use Case: SharePoint in Azure
   Let’s say your company runs SharePoint on a physical server in your office. You want to move it to the cloud:

   With a VM, you’d install Windows Server, then install SharePoint — just like a physical machine.
   With a container, you’d use a pre-built SharePoint image (or build your own), and run it instantly without managing the OS. 

  Docker
  * Docker is the most widely used tool to create and manage containers. 
  * Azure supports Docker and also offers Azure Kubernetes Service (AKS) to manage containers at scale.

   Azure Container Instances
   Azure Container Instances allow you to upload your containers and then the service runs the containers for you.

   How They Work Together
   You build your container using Docker.
   You run it in the cloud using ACI (or other services like Azure Kubernetes Service).
   
   Analogy
   Think of Docker as the kitchen where you prepare your meal (container), and 
   ACI as the restaurant where you serve it to customers (users) — without worrying about the building, staff, or utilities.

   Docker absolutely knows how to run your app — but only on a system where Docker is installed and running. For example:
   Your laptop
   A local server
   A VM with Docker installed

   ACI is a cloud service that says:
   “Give me your Docker container, and I’ll run it for you — no servers, no VMs, no setup.”

   So instead of:
   Installing Docker on a VM
   Managing OS updates
   Handling scaling or networking
   You just upload your Docker image, and ACI takes care of the rest.

   Azure Container Instances (ACI)	
   Feature	                  Description
   Use Case	                  Run single, isolated containers quickly without managing infrastructure
   Orchestration	            No built-in orchestration (no scaling, no load balancing)
   Startup Time	            Very fast — ideal for short-lived or burst workloads
   Scaling	                  Manual — you scale by deploying more instances yourself
   Networking	               Basic — supports VNet integration, but limited routing features
   Best For	                  Simple apps, background jobs, scheduled tasks, or testing containers

   
   Azure Container Apps (ACA)
   Feature	                  Description
   Use Case	                  Run microservices or web apps with built-in scaling and routing
   Orchestration	            Built-in — supports KEDA(Kubernetes-based Event-Driven Autoscaler)-based autoscaling, revisions, and traffic splitting
   Startup Time	            Slightly slower than ACI, but supports long-running apps
   Scaling	                  Automatic — based on HTTP requests, queue length, CPU, etc.
   Networking	               Advanced — supports ingress, Dapr, secure endpoints, and VNet
   Best For	                  Web APIs, event-driven apps, microservices, and production workloads needing scale and resilience


   Use containers in your solutions
   * Containers are often used to create solutions by using a microservice architecture. 
   * This architecture is where you break solutions into smaller, independent pieces. 
   * For example, you might split a website into a container hosting your front end, another hosting your back end, and a third for storage. 
   * This split allows you to separate portions of your app into logical sections that can be maintained, scaled, or updated independently.

   * Imagine your website back-end reaches capacity, but the front end and storage aren't stressed. 
     With containers, you could scale the back-end separately to improve performance. 
     If something necessitated such a change, you could also choose to change the storage service or 
     modify the front end without impacting any of the other components.

   
   Azure functions
   Serverless compute option that doesn’t require maintaining virtual machines or containers
   (Responsibility of managing the server is taken care)
   
   Abstraction of server 
   - No infra management(No need to focous on admin task - installing OS)
   - Scaling 
   - Only pay for what you use

   Using Azure Functions is ideal when you're only concerned about the code running your service 
   and not about the underlying platform or infrastructure.
   Functions scale automatically based on demand, so they may be a good choice when demand is variable.
   Azure Functions runs your code when it triggers and automatically deallocates resources when the function is finished. In this model, Azure only charges you for the CPU time used while your function runs.

   Scenario	                                    Charged?
   User logs in → triggers a function	         Yes
   No one uses the app for hours	               No
   Function runs for 2 seconds	               Charged for 2 seconds only

   Functions can be either 
   Stateless - Stateless (the default), behave as if they restart every time they respond to an event. 
               Good for simple, independent tasks (e.g., sending an email, logging an event).

   Stateful  - Stateful (called Durable Functions), a context is passed through the function to track prior activity.
               Example: A function that tracks the status of an order over time.


Application hosting options
1. Virtual machine (VM) 
2. Containers
3. Azure App Service

Azure App Service
* Azure App Service is a robust hosting option that you can use to host your apps in Azure. 
* App Service enables you to build and host web apps, background jobs, mobile back-ends, 
  and RESTful APIs in the programming language of your choice without managing infrastructure.
* App Service supports Windows and Linux and multiple languages, including .NET, .NET Core, Java, Ruby, Node.js, PHP, or Python
* It enables automated deployments from GitHub, Azure DevOps, or any Git repo to support a continuous deployment model.

App Service handles most of the infrastructure decisions you deal with in hosting web-accessible apps:

* Deployment and management are integrated into the platform.
* Endpoints can be secured.
* Sites can be scaled quickly to handle high traffic loads.
* The built-in load balancing and traffic manager provide high availability.

Types of app services
With App Service, you can host most common app service styles like:

1. Web apps
2. API apps
3. WebJobs
4. Mobile apps

Azure virtual networking

Azure virtual networks provide the following key networking capabilities:

1. Isolation and segmentation
2. Internet communications
3. Communicate between Azure resources
4. Communicate with on-premises resources
5. Route network traffic
6. Filter network traffic
7. Connect virtual networks

1. Isolation and segmentation
* Multiple isolated virtual networks
* You set up a virtual network, you define a private IP address space(Using either public or private IP address ranges)
* The IP range only exists within the virtual network and isn't internet routable.  
* You can divide that IP address space into subnets and allocate part of the defined address space to each named subnet.

2. Internet communications
* You can enable incoming connections from the internet by assigning a public IP address to an Azure resource, 
  or putting the resource behind a public load balancer.

3. Communicate between Azure resources
* Virtual networks 
                  can connect not only VMs but other Azure resources, such as the App Service Environment for Power Apps, Azure Kubernetes Service, and Azure virtual machine scale sets.
* Service endpoints 
                  can connect to other Azure resource types, such as Azure SQL databases and storage accounts. This approach enables you to link multiple Azure resources to virtual networks to improve security and provide optimal routing between resources.

4. Communicate with on-premises resources
* Azure virtual networks enable you to link resources together in your on-premises environment and within your Azure subscription. 
  In effect, you can create a network that spans both your local and cloud environments. 
  There are three mechanisms for you to achieve this connectivity:

   1. Point-to-site virtual private network connections are from a computer outside your organization back into your corporate network. In this case, the client computer initiates an encrypted VPN connection to connect to the Azure virtual network.
   2. Site-to-site virtual private networks link your on-premises VPN device or gateway to the Azure VPN gateway in a virtual network. In effect, the devices in Azure can appear as being on the local network. The connection is encrypted and works over the internet.
   3. Azure ExpressRoute provides a dedicated private connectivity to Azure that doesn't travel over the internet. ExpressRoute is useful for environments where you need greater bandwidth and even higher levels of security.

 5. Route network traffic
   By default, 
   Azure routes traffic between subnets on any connected virtual networks, on-premises networks, and the internet. 
   You also can control routing and override those settings, as follows:

   1. Route tables allow you to define rules about how traffic should be directed. 
      You can create custom route tables that control how packets are routed between subnets.
   2. Border Gateway Protocol (BGP) works with Azure VPN gateways, Azure Route Server, or Azure ExpressRoute to propagate on-premises 
      BGP routes to Azure virtual networks.

  6. Filter Network Traffic in Azure
     1. Network Security Groups (NSGs)
      * Act like firewalls for subnets or VMs.
      * Contain inbound/outbound rules.
      * Rules filter traffic based on:
         a. Source/Destination IP
         b. Port number
         c, Protocol (TCP/UDP)
      2. Network Virtual Appliances (NVAs)
      * Special VMs that perform advanced network functions.
      Examples:
         Firewalls
         WAN optimizers
      * Used for custom traffic inspection and control.

   Connect Virtual Networks
   1. Virtual Network Peering
      Connects two VNets directly.
      Traffic stays private and uses Microsoft’s backbone, not the public internet.
      VNets can be in different regions.
      Enables seamless communication between resources.
   2. User-Defined Routes (UDRs)
      Custom routing rules between subnets or VNets.
      Gives fine-grained control over traffic flow.
      Useful for directing traffic through NVAs or specific paths

Azure virtual private networks
A virtual private network (VPN) uses an encrypted tunnel within another network.
VPNs are typically deployed to connect two or more trusted private networks to one another over an untrusted network (typically the public internet).
Traffic is encrypted while traveling over the untrusted network to prevent eavesdropping or other attacks. 
VPNs can enable networks to safely and securely share sensitive information.

VPN gateways
Azure VPN Gateway instances are deployed in a dedicated subnet of the virtual network and enable the following connectivity:

1. Connect on-premises datacenters to virtual networks through a site-to-site connection.
2. Connect individual devices to virtual networks through a point-to-site connection.
3. Connect virtual networks to other virtual networks through a network-to-network connection.

* All data transfer is encrypted inside a private tunnel as it crosses the internet.
* You can deploy only one VPN gateway in each virtual network. However, you can use one gateway to connect to multiple locations, which includes other virtual networks or on-premises datacenters.

In Azure, regardless of the VPN type, the method of authentication employed is a preshared key.
Two types

Policy-based VPN gateways 
In Route-based gateways

Feature	            Policy-Based VPN	                     Route-Based VPN

Routing Method	      Static IP rules	                     IP routing (static/dynamic)
Flexibility	         Low	                                 High
Tunnel Selection	   Based on IP pairs	                     Based on routing table
Subnet Changes	      Manual updates needed	               Automatically adapts
Use Case	            Simple, fixed networks	               Complex, scalable networks


Use a route-based VPN gateway if you need any of the following types of connectivity:
* Connections between virtual networks
* Point-to-site connections
* Multisite connections
* Coexistence with an Azure ExpressRoute gateway

High-availability scenarios
If you’re configuring a VPN to keep your information safe, you also want to be sure that 
it’s a highly available and fault tolerant VPN configuration. There are a few ways to maximize the resiliency of your VPN gateway.

1. Active/standby
2. Active/active
3. ExpressRoute failover
4. Zero-redundant gateways

1. Active/Standby
* Default setup in Azure.
* One VPN gateway is active, the other is standby.
* If the active gateway fails, traffic automatically switches to the standby.
* Ensures basic fault tolerance.

2. Active/Active
* Both gateways are active simultaneously.
* Supports higher throughput and redundancy.
* Ideal for mission-critical workloads.
* Requires BGP (Border Gateway Protocol) for dynamic routing.

3. ExpressRoute Failover
* Combines ExpressRoute (private connection) with VPN.
* If ExpressRoute fails, traffic automatically switches to VPN.
* Ensures connectivity continuity between on-premises and Azure.

4. Zero-Redundant Gateways
* Only one gateway instance, no backup.
* Lowest cost, but no fault tolerance.
* Suitable for non-critical or test environments.

Azure ExpressRoute
Azure ExpressRoute lets you extend your on-premises networks into the Microsoft cloud over a private connection, with the help of a connectivity provider.
Each location would have its own ExpressRoute circuit.

Connectivity can be from an any-to-any (IP VPN) network, a point-to-point Ethernet network, 
or a virtual cross-connection through a connectivity provider at a colocation facility

Features and benefits of ExpressRoute
1. Connectivity to Microsoft cloud services across all regions in the geopolitical region.
2. Global connectivity to Microsoft services across all regions with the ExpressRoute Global Reach.
3. Dynamic routing between your network and Microsoft via Border Gateway Protocol (BGP).
4. Built-in redundancy in every peering location for higher reliability.

Connectivity to Microsoft cloud services
ExpressRoute enables direct access to the following services in all regions:

1. Microsoft Office 365
2. Microsoft Dynamics 365
3. Azure compute services, such as Azure Virtual Machines
4. Azure cloud services, such as Azure Cosmos DB and Azure Storage


Global Connectivity
* ExpressRoute Global Reach lets you connect multiple on-premises sites across the globe.
* Example: Office in Asia and datacenter in Europe can communicate securely via Microsoft’s backbone.
* No public internet involved—data stays private and secure.

Dynamic Routing
* ExpressRoute uses BGP (Border Gateway Protocol).
* BGP enables automatic route updates between your on-premises network and Azure.
* Helps adapt to network changes without manual reconfiguration.

Built-in Redundancy
* Connectivity providers use redundant hardware to ensure high availability.
* You can configure multiple ExpressRoute circuits for extra fault tolerance.
* Ensures continuous connectivity even if one circuit fails.

ExpressRoute connectivity models
ExpressRoute supports four models that you can use to connect your on-premises network to the Microsoft cloud:

1. CloudExchange colocation
2. Point-to-point Ethernet connection
3. Any-to-any connection
4. Directly from ExpressRoute sites

1. Colocation at a Cloud Exchange
* Your facility (datacenter or office) is physically located at a cloud exchange (e.g., ISP).
* You can request a virtual cross-connect to Microsoft’s network.
* Ideal for enterprises already colocated with cloud providers.

2. Point-to-Point Ethernet Connection
* A direct Ethernet link between your facility and Microsoft’s cloud.
* Typically set up via a network service provider.
* Offers private, secure, and dedicated connectivity.

3. Any-to-Any Networks
* Integrates your WAN (Wide Area Network) with Azure.
* Connects multiple offices and datacenters to Azure like a branch office setup.
* Uses provider-managed MPLS networks for seamless connectivity.

4. Directly from ExpressRoute Sites
* Connect directly to Microsoft’s global network at peering locations.
* ExpressRoute Direct offers:
      Dual 100 Gbps or 10 Gbps connections
      Active/Active high-throughput setup
      Best for large enterprises needing massive bandwidth and high availability.


Security considerations
With ExpressRoute, your data doesn't travel over the public internet, 
reducing the risks associated with internet communications. 
ExpressRoute is a private connection from your on-premises infrastructure to your Azure infrastructure. 
Even if you have an ExpressRoute connection, DNS queries, certificate revocation list checking, and Azure Content Delivery Network requests are still sent over the public internet.

Azure DNS(Domain Name System):

What is DNS?
DNS is like the phonebook of the internet. It translates human-friendly domain names (like www.microsoft.com) into IP addresses (like 20.81.111.85) that computers use to locate each other.

How DNS Works (Step-by-Step)
1. You enter a domain name in your browser.
2. Your computer asks a DNS resolver (usually from your ISP).
3. The resolver checks its cache or asks other DNS servers.
4. It finds the IP address and sends it back.
5. Your browser connects to that IP and loads the site.

Benefits of Azure DNS
1. Reliability and Performance
* Azure DNS is hosted on Microsoft’s global infrastructure.
* Ensures fast response times and high availability.
* Uses anycast routing to direct queries to the nearest DNS server.

2. Security
* Integrated with Azure role-based access control (RBAC).
* Helps manage who can update DNS records.
* Supports private DNS zones for internal name resolution.

3. Ease of Use
* Managed through the Azure Portal, CLI, or APIs.
* Seamless integration with other Azure services.
* No need to maintain your own DNS servers.

4. Customizable Virtual Networks
* You can link private DNS zones to your virtual networks.
* Enables name resolution for VMs and services within your network.
* Supports split-horizon DNS (different responses for internal vs external queries).

5. Alias Records
* Lets you map a DNS name to an Azure resource (like a public IP or Traffic Manager).
* Automatically updates when the resource’s IP changes.
* Simplifies DNS management for dynamic resources.

Module 3
Azure storage services

Azure storage accounts
A storage account provides a unique namespace for your Azure Storage
When you create your storage account, you’ll start by picking the storage account type

Type
1. Standard general-purpose v2
2. Premium block blobs
3. Premium file shares
4. Premium page blobs

Storage account endpoints
The combination of the account name and the Azure Storage service endpoint forms the endpoints for your storage account.

Storage service	      Endpoint
Blob Storage	         https://<storage-account-name>.blob.core.windows.net
Data Lake Storage Gen2	https://<storage-account-name>.dfs.core.windows.net
Azure Files	            https://<storage-account-name>.file.core.windows.net
Queue Storage	         https://<storage-account-name>.queue.core.windows.net
Table Storage	         https://<storage-account-name>.table.core.windows.net

Azure storage redundancy
Redundancy ensures that your storage account meets its availability and durability targets even in the face of failures.
Azure Storage always stores multiple copies of your data.

The factors that help determine which redundancy option you should choose include:

1. How your data is replicated in the primary region.
2. Whether your data is replicated to a second region that is geographically distant to the primary region, to protect against regional disasters.
3. Whether your application requires read access to the replicated data in the secondary region if the primary region becomes unavailable.

Redundancy in the primary region
Data in an Azure Storage account is always replicated three times in the primary region. 
Azure Storage offers two options for how your data is replicated in the primary region
a. Locally redundant storage (LRS) - Durability 11 nines (99.999999999%)
   * Replicates your data three times within a single data center in the primary region
   * LRS is the lowest-cost redundancy option and offers the least durability compared to other options
b. Zone-redundant storage (ZRS)    - Durability 12 nines
   * Replicates your Azure Storage data synchronously across three Azure availability zones in the primary region. 

Redundancy in a secondary region
For applications requiring high durability
You can choose to additionally copy the data in your storage account to a secondary region that is hundreds of miles away from the primary region. 

You select the primary region for the account. 
The paired secondary region is based on Azure Region Pairs, and can't be changed.

a. Geo-redundant storage (GRS) - Durability 16 nines
    * Similar to LRS in two regions
b. Geo-zone-redundant storage (GZRS) - Durability 16 nines
    * Similar to running ZRS in the primary region and LRS in the secondary region

That data is available to be read, only if the customer or Microsoft initiates a failover from the primary to secondary region. 
If you enable read access to the secondary region, your data is always available
a. Read-access geo-redundant storage (RA-GRS) 
b. Read-access geo-zone-redundant storage (RA-GZRS).


Azure storage services

Azure Blobs: A massively scalable object store for text and binary data. Also includes support for big data analytics through Data Lake Storage Gen2.
Azure Files: Managed file shares for cloud or on-premises deployments.
Azure Queues: A messaging store for reliable messaging between application components.
Azure Disks: Block-level storage volumes for Azure VMs.
Azure Tables: NoSQL table option for structured, non-relational data

Benefits of Azure Storage
1. Durable and highly available
2. Secure 
3. Scalable
4. Managed
5. Accessible

Azure Blobs:
* A blob could contain gigabytes of binary data streamed from a scientific instrument, an encrypted message for another application, or data in a custom format for an app you're developing.
* Data is uploaded as blobs, and Azure takes care of the physical storage needs.

Blob storage is ideal for:

* Serving images or documents directly to a browser.
* Storing files for distributed access.
* Streaming video and audio.
* Storing data for backup and restore, disaster recovery, and archiving.
* Storing data for analysis by an on-premises or Azure-hosted service.

Accessing blob storage
Users or client applications can access blobs via 
1. URLs
2. The Azure Storage REST API
3. Azure PowerShell
4. Azure CLI 
5. Azure Storage client library(.NET, Java, Node.js, Python, PHP, and Ruby)

Blob storage tiers
Data stored in the cloud can be handled differently based on how it's generated, processed, and accessed over its lifetime. 

The available access tiers include:
1. Hot access tier: Optimized for storing data that is accessed frequently (for example, images for your website).
2. Cool access tier: Optimized for data that is infrequently accessed and stored for at least 30 days (for example, invoices for your customers).
3. Cold access tier: Optimized for storing data that is infrequently accessed and stored for at least 90 days.
4. Archive access tier: Appropriate for data that is rarely accessed and stored for at least 180 days, with flexible latency requirements (for example, long-term backups).


Access Tier	  Set at Account Level	  Set at Blob Level	      Availability	   Durability	Retrieval Latency	    Storage Cost	 Access Cost	Use Case
Hot	        Yes	                    Yes	                     High	            High	      Low (fast)	          High	          Low	         Frequently accessed data
Cool	        Yes	                    Yes	                     Slightly lower	   High	      Low (fast)	          Lower	       Higher	      Infrequently accessed data
Cold	        Yes	                    Yes	                     Slightly lower	   High	      Low (fast)	          Lower	       Higher	      Rarely accessed data
Archive	     No	                    Yes	                     Offline           High        High (hours)          Lowest         Highest       Long-term archival data



